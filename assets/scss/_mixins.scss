$breakpoint-mobile: 576px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 992px;
$breakpoint-desktop-large: 1200px; 

%invisible {
  visibility: hidden; }

%antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; 
}

@function rem($px){
	@return ($px / 16) * 1rem;
}

@mixin justify{
  word-break: normal;
  hyphens: auto;
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin clearfix{
  &:afterÂ {
    content: "";
    display: block;
    clear: both;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie); //IE8
}
/* 
.fade {
  @include opacity(.4);
}
*/ 

@mixin skewed{
  content: '';
  display: block;
  width: 100%;
  height: rem(50px);
  position: absolute;
  transform: skewY(-1.5deg);
}

@mixin center{
  width: 90%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

@mixin opacity($value){
  opacity: $value;
}

@mixin screen($size) {
  $mobile: "min-width: 576px";
  $tablet: "min-width: 768px";
  $desktop: "min-width: 992px";
  $desktop-large: "min-width: 1200px";

  @if $size == desktop-large {
    @media only screen and ($desktop-large) {
      @content;
    }
  }
  @else if $size == desktop {
    @media only screen and ($desktop) {
      @content;
    }
  }
  @else if $size == tablet {
    @media only screen and ($tablet) {
      @content;
    }
  }
  @else if $size == mobile {
    @media only screen and ($mobile) {
      @content;
    }
  }
}
// Using the mixin
/*
  .wrapper {
  margin: 0 auto;
  width: 100%;
  @include screen('tablet') {
    width: 90%;
  }

  @include screen('desktop') {
    width: 85%;
  }
}
*/